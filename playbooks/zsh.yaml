---
- name: Install zsh, oh-my-zsh, autosuggestions and syntax highlighting
  hosts: linux
  become: true
  gather_facts: false

  tasks:
    - name: Install zsh package
      apt:
        name: zsh
        state: present
        update_cache: true

    - name: Check if Oh-My-Zsh is installed
      stat:
        path: ~/.oh-my-zsh
      register: ohmyzsh_installed
      become: false

    - name: Install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      when: not ohmyzsh_installed.stat.exists
      become: false

    - name: Check if zsh-autosuggestions plugin is installed
      stat:
        path: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      register: zsh_autosuggestions_installed
      become: false


    - name: Install zsh-autosuggestions plugin
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ ZSH_CUSTOM | default('~/.oh-my-zsh/custom') }}/plugins/zsh-autosuggestions"
        version: master
      when: not zsh_autosuggestions_installed.stat.exists
      become: false


    - name: Check if zsh-syntax-highlighting plugin is installed
      stat:
        path: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      register: zsh_syntax_highlighting_installed
      become: false


    - name: Install zsh-syntax-highlighting plugin
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ ZSH_CUSTOM | default('~/.oh-my-zsh/custom') }}/plugins/zsh-syntax-highlighting"
        version: master
      when: not zsh_syntax_highlighting_installed.stat.exists
      become: false


    - name: Check if zsh-autosuggestions plugin is already added
      shell: grep -E "^plugins=\(.*zsh\-autosuggestions.*\)" ~/.zshrc
      register: autosuggestions_plugin_check
      changed_when: false
      failed_when: false
      become: false


    - name: Configure zsh-autosuggestions plugin
      lineinfile:
        path: ~/.zshrc
        regexp: '^plugins=\((.*)\)'
        line: 'plugins=(\1 zsh-autosuggestions)'
        backrefs: true
      become: false
      when: autosuggestions_plugin_check.rc != 0


    - name: Check if zsh-syntax-highlighting plugin is already added
      shell: grep -E "^plugins=\(.*zsh\-syntax\-highlighting.*\)" ~/.zshrc
      register: syntax_highlighting_plugin_check
      changed_when: false
      failed_when: false
      become: false


    - name: Configure zsh-syntax-highlighting plugin
      lineinfile:
        path: ~/.zshrc
        regexp: '^plugins=\((.*)\)'
        line: 'plugins=(\1 zsh-syntax-highlighting)'
        backrefs: true
      become: false
      when: syntax_highlighting_plugin_check.rc != 0


    - name: Configure zsh theme
      lineinfile:
        path: ~/.zshrc
        regexp: "^ZSH_THEME="
        line: 'ZSH_THEME="kafeitu"'
      become: false


    - name: Disable auto title
      lineinfile:
        path: ~/.zshrc
        regexp: "^# DISABLE_AUTO_TITLE="
        line: 'DISABLE_AUTO_TITLE="true"'
      become: false


    - name: Add on .zshrc user bin folder to PATH
      blockinfile:
        path: ~/.zshrc
        block: |
          if [ -d "$HOME/bin" ] ; then
            PATH="$HOME/bin:$PATH"
          fi
        marker: "# {mark} ANSIBLE MANAGED BLOCK - bin folder"
      become: false


    - name: Add on .zshrc user .local/bin folder to PATH
      blockinfile:
        path: ~/.zshrc
        block: |
          if [ -d "$HOME/.local/bin" ] ; then
            PATH="$HOME/.local/bin:$PATH"
          fi
        marker: "# {mark} ANSIBLE MANAGED BLOCK - .local/bin folder"
      become: false

    - name: Configure aliases on .zshrc
      blockinfile:
        path: ~/.zshrc
        block: |
          alias copilot='gh copilot suggest'
          alias cat='batcat'
        marker: "# {mark} ANSIBLE MANAGED BLOCK - aliases"
      become: false

    - name: Change default shell to zsh
      user:
        name: "{{ ansible_user }}"
        shell: /usr/bin/zsh
